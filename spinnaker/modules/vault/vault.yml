apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
spec:
  selector:
    app: vault
  externalTrafficPolicy: Cluster
  type: LoadBalancer
  loadBalancerIP: ${load_balancer_ip}
  ports:
  - name: vault-port
    port: 443
    targetPort: 8200
    protocol: TCP

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
spec:
  serviceName: vault
  replicas: 3
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 60
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["vault"]
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
#################################
      - name: vault-init
        image: "sethvargo/vault-init:1.0.0"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "100m"
            memory: "64Mi"
        env:
        - name: GCS_BUCKET_NAME
          value: "${gcs_bucket_name}"
        - name: KMS_KEY_ID
          value: "projects/${project}/locations/${cluster_region}/keyRings/${kms_key_ring}/cryptoKeys/${kms_crypto_key}"
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: VAULT_SECRET_SHARES
          value: "5"
        - name: VAULT_SECRET_THRESHOLD
          value: "3"
#################################
      - name: vault
        image: "vault:1.0.3"
        imagePullPolicy: IfNotPresent
        args: ["server"]
        securityContext:
          capabilities:
            add: ["IPC_LOCK"]
        ports:
        - containerPort: 8200
          name: vault-port
          protocol: TCP
        - containerPort: 8201
          name: cluster-port
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "256Mi"
        volumeMounts:
        - name: vault-tls
          mountPath: /etc/vault/tls
        env:
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: POD_IP_ADDR
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: VAULT_LOCAL_CONFIG
          value: |
            api_addr     = "https://${load_balancer_ip}:8200"
            cluster_addr = "https://$(POD_IP_ADDR):8201"

            log_level = "warn"

            ui = true

            seal "gcpckms" {
              project    = "${project}"
              region     = "global"
              key_ring   = "${kms_key_ring}"
              crypto_key = "${kms_crypto_key}"
            }

            storage "gcs" {
              bucket     = "${gcs_bucket_name}"
              ha_enabled = "true"
            }

            listener "tcp" {
              address     = "127.0.0.1:8200"
              tls_disable = "true"
            }

            listener "tcp" {
              address       = "$(POD_IP_ADDR):8200"
              tls_cert_file = "/etc/vault/tls/vault.pem"
              tls_key_file  = "/etc/vault/tls/vault.key"

              tls_disable_client_certs = true
            }
        readinessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true
            port: 8200
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
#################################
      volumes:
      - name: vault-tls
        secret:
          secretName: vault-tls
